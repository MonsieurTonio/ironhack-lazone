const express = require("express");
const passport = require('passport');
const router = express.Router();
const User = require("../models/User");
<<<<<<< HEAD
const ensureLogin = require("connect-ensure-login");
const SpotifyWebApi = require('spotify-web-api-node');
const document = require('../views')
const Artist = require("../models/Artist")


// Remember to insert your credentials here
const spotifyApi = new SpotifyWebApi({
  clientId: process.env.spotifyClientId,
  clientSecret: process.env.spotifyClientSecret
});

// Retrieve an access token
spotifyApi.clientCredentialsGrant()
  .then(data => {
    spotifyApi.setAccessToken(data.body['access_token']);
=======
//const ensureLogin = require("connect-ensure-login");

router.get('/'/*,ensureLogin.ensureLoggedIn()*/, (req, res, next) => {
  User.findById("5c4c7b50e36d9013b2fec8b0",function(err,user){
  //User.findById(req.user._id, (err, user) => {
    if (err) return next(err);
    res.render('dashboard', { user: user });
>>>>>>> 7cc950c0c6bb9b723064ce99d535b6ea693cecc5
  })
  .catch(error => {
    console.log('Something went wrong when retrieving an access token', error);
  });



router.get('/', ensureLogin.ensureLoggedIn(), (req, res, next) => {
  console.log('hey');

  // User.findById(req.user._id) ---> On n'utilise pas le User.findById car il est déjà dans le req.user grâce au ensureLogin
  //   .catch(err => next(err))
  //   .then((user) => {
  //   })
  // ;

  // Ici rajouter les artistes déjà saved dans ma database

  let dbartists = req.user.artistsFollowed

  if (req.query.artist) {
    spotifyApi.searchArtists(req.query.artist)
      .catch(err => {
        return next(err); //Si erreur => on arrêt tout et on veut afficher l'erreur
      })
      .then((data) => {
        res.render('dashboard', {
          artistsfound: data.body.artists.items,
          queryname: req.query.artist,
          myartists: dbartists
        });
      })
      ;
  } else {
    res.render('dashboard', {
      myartists: dbartists
    });
  }


})

// })



router.post('/', (req, res, next) => {
  spotifyApi.getArtist(req.body.artistid)
  spotifyApi.getArtist(req.body.artistid)
    .catch(err => {
      return next(err); //Si erreur => on arrêt tout et on veut afficher l'erreur
    })
    .then((data) => {
      console.log(data.body.name);
      var newArtist = new Artist({
        artistName: data.body.name,
        spotifyAccountId: data.body.id,
        genre: data.body.genres,
        album: data.body.albums,
        datas: [data.body.followers]
      })

      newArtist.save(function (err) {
        if (err) {
          throw err;
        } else {
          console.log('Save artist successfully!');
        }
      })
    })

      res.render('dashboard') // on envoie le dashboard pour répondre à la requête
  });

module.exports = router;
